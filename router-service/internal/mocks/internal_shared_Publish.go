// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	context "context"

	shared "github.com/lucasd-coder/fast-feet/router-service/internal/shared"
	mock "github.com/stretchr/testify/mock"
)

// Publish_internal_shared is an autogenerated mock type for the Publish type
type Publish_internal_shared struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, msg
func (_m *Publish_internal_shared) Send(ctx context.Context, msg *shared.Message) error {
	ret := _m.Called(ctx, msg)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *shared.Message) error); ok {
		r0 = rf(ctx, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPublish_internal_shared creates a new instance of Publish_internal_shared. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPublish_internal_shared(t interface {
	mock.TestingT
	Cleanup(func())
}) *Publish_internal_shared {
	mock := &Publish_internal_shared{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
