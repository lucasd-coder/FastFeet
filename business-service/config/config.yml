app:
  name: business-service
  version: 1.0.0
  aes-key: ${AES_KEY}

logger:
  log_level: ${LOG_LEVEL}
  report-caller: false

grpc:
  port: ${GRPC_PORT}

http:
  port: ${HTTP_PORT}
  timeout: 20s

integration:
  grpc:
    user-manager-service:
      url: ${USER_MANAGER_URL}
      max-retry: 3
      retry-wait-time: 5s
      retry-max-wait-time: 20s
    order-data-service:
      url: ${ORDER_DATA_URL}
      max-retry: 3
      retry-wait-time: 5s
      retry-max-wait-time: 20s
    auth-service:
      url: ${AUTH_URL}
      max-retry: 3
      retry-wait-time: 5s
      retry-max-wait-time: 20s
  http:
    viacep:
      url: ${VIA_CEP_URL}
      max-conn: 20
      max-routes: 20
      read-timeout: 10s
      conn-timeout: 10s
      debug: true
      request-timeout: 60s
      max-retry: 3
      retry-wait-time: 5s
      retry-max-wait-time: 20s
      enabled: false    
    brasilaberto:
      url: ${BRASIL_ABERTO_URL}
      max-conn: 20
      max-routes: 20
      read-timeout: 10s
      conn-timeout: 10s
      debug: true
      request-timeout: 60s
      max-retry: 3
      retry-wait-time: 5s
      retry-max-wait-time: 20s
      enabled: true

  rabbit-mq:
    queue:
      user-events:
        url: rabbit://business-service-user-events
        max-retry: 3
        poll-delay-in-milliseconds: 100ms
        max-concurrent-messages: 30
        number-of-message-receivers: 1
      order-events:
        url: rabbit://business-service-order-events
        max-retry: 3
        poll-delay-in-milliseconds: 100ms
        max-concurrent-messages: 30
        number-of-message-receivers: 1
  
  redis:
    url: ${REDIS_URL}
    db: 1
    password: ${REDIS_HOST_PASSWORD}
    ttl: 1h
  
  otlp:
    url: ${OTEL_EXPORTER_OTLP_ENDPOINT}
    protocol: grpc
    timeout: 20s