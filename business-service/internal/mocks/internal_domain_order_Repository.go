// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	pb "github.com/lucasd-coder/fast-feet/business-service/pkg/pb"
)

// Repository_internal_domain_order is an autogenerated mock type for the Repository type
type Repository_internal_domain_order struct {
	mock.Mock
}

// GetAllOrder provides a mock function with given fields: ctx, req
func (_m *Repository_internal_domain_order) GetAllOrder(ctx context.Context, req *pb.GetOrderServiceAllOrderRequest) (*pb.GetAllOrderResponse, error) {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for GetAllOrder")
	}

	var r0 *pb.GetAllOrderResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetOrderServiceAllOrderRequest) (*pb.GetAllOrderResponse, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetOrderServiceAllOrderRequest) *pb.GetAllOrderResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.GetAllOrderResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetOrderServiceAllOrderRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, req
func (_m *Repository_internal_domain_order) Save(ctx context.Context, req *pb.OrderRequest) (*pb.OrderResponse, error) {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 *pb.OrderResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *pb.OrderRequest) (*pb.OrderResponse, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *pb.OrderRequest) *pb.OrderResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.OrderResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *pb.OrderRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRepository_internal_domain_order creates a new instance of Repository_internal_domain_order. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRepository_internal_domain_order(t interface {
	mock.TestingT
	Cleanup(func())
}) *Repository_internal_domain_order {
	mock := &Repository_internal_domain_order{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
