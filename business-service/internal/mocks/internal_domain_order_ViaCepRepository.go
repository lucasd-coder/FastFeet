// Code generated by mockery v2.37.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	shared "github.com/lucasd-coder/fast-feet/business-service/internal/shared"
)

// ViaCepRepository_internal_domain_order is an autogenerated mock type for the ViaCepRepository type
type ViaCepRepository_internal_domain_order struct {
	mock.Mock
}

// GetAddress provides a mock function with given fields: ctx, cep
func (_m *ViaCepRepository_internal_domain_order) GetAddress(ctx context.Context, cep string) (*shared.AddressResponse, error) {
	ret := _m.Called(ctx, cep)

	var r0 *shared.AddressResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*shared.AddressResponse, error)); ok {
		return rf(ctx, cep)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *shared.AddressResponse); ok {
		r0 = rf(ctx, cep)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shared.AddressResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, cep)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewViaCepRepository_internal_domain_order creates a new instance of ViaCepRepository_internal_domain_order. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewViaCepRepository_internal_domain_order(t interface {
	mock.TestingT
	Cleanup(func())
}) *ViaCepRepository_internal_domain_order {
	mock := &ViaCepRepository_internal_domain_order{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
