apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        prometheus.io/scrape: 'true'        
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8080'
    spec:
      containers:
        - name: auth-service
          image: lucasd-coder/auth-service:latest      
          resources:
            requests:
              memory: "500Mi"
              cpu: "1"
            limits:
              memory: "1Gi"
              cpu: "2"     
          env:
            - name: LOG_LEVEL
              value: info
            - name: GRPC_PORT
              value: "50051"
            - name: HTTP_PORT
              value: "8080"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "opentelemetry-collector.default.svc.cluster.local:4317"
            - name: AUTH_URL
              value: "auth-service.default.svc.cluster.local:8080"
            - name: KEYCLOAK_URL
              value: "http://keycloak.default.svc.cluster.local:80/auth"
            - name: KEYCLOAK_REALM
              value: "fastfeet"
            - name: KEYCLOAK_USERNAME
              valueFrom:
                secretKeyRef:
                  name: auth-service-keycloak-username
                  key: keycloak-username
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-service-keycloak-password
                  key: keycloak-password
          ports:
            - containerPort: 50051
              protocol: TCP  
            - containerPort: 8080           
          readinessProbe:
            httpGet:
              port: 8080
              path: "/health"
            initialDelaySeconds: 45
            periodSeconds: 10
          livenessProbe:            
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
            initialDelaySeconds: 45
            periodSeconds: 10
          lifecycle:
              preStop:
                exec:
                  command:
                    - /bin/sleep
                    - "30"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: auth-service
  name: auth-service
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8080'
spec:
  ports:
  - port: 50051
    name: grpc
    protocol: TCP    
    targetPort: 50051
  - port: 8080
    name: http-metrics
    protocol: TCP
    targetPort: 8080
  selector:
    app: auth-service

