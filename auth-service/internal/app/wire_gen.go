// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/google/wire"
	"github.com/lucasd-coder/fast-feet/auth-service/config"
	"github.com/lucasd-coder/fast-feet/auth-service/internal/domain/user"
	"github.com/lucasd-coder/fast-feet/auth-service/internal/domain/user/handler"
	"github.com/lucasd-coder/fast-feet/auth-service/internal/provider/kecloak"
	"github.com/lucasd-coder/fast-feet/auth-service/internal/provider/validator"
	"github.com/lucasd-coder/fast-feet/auth-service/internal/shared"
)

import (
	_ "net/http/pprof"
)

// Injectors from wire.go:

func InitializeUserHandler() *handler.Handler {
	validation := &validator.Validation{}
	configConfig := config.GetConfig()
	repository := kecloak.NewRepository(configConfig)
	serviceImpl := user.NewService(validation, repository)
	handlerHandler := handler.NewHandler(serviceImpl, configConfig)
	return handlerHandler
}

// wire.go:

var initializeValidator = wire.NewSet(wire.Struct(new(validator.Validation)), wire.Bind(new(shared.Validator), new(*validator.Validation)))

var initializeRepository = wire.NewSet(wire.Bind(new(user.Repository), new(*kecloak.Repository)), kecloak.NewRepository)
